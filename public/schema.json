{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Example Schema",
  "description": "A schema representing a complex object with various features.",
  "type": "object",
  "definitions": {
    "address": {
      "title": "Address",
      "description": "An object representing an address.",
      "type": "object",
      "properties": {
        "street_address": {
          "title": "Street Address",
          "description": "The street address.",
          "type": "string"
        },
        "city": {
          "title": "City",
          "description": "The city.",
          "type": "string"
        },
        "state": {
          "title": "State",
          "description": "The state. This field has an enum, so it will render as a select input.",
          "type": "string",
          "enum": [
            "AL",
            "AK",
            "AS",
            "AZ",
            "AR",
            "CA",
            "CO",
            "CT",
            "DE",
            "DC",
            "FM",
            "FL",
            "GA",
            "GU",
            "HI",
            "ID",
            "IL",
            "IN",
            "IA",
            "KS",
            "KY",
            "LA",
            "ME",
            "MH",
            "MD",
            "MA",
            "MI",
            "MN",
            "MS",
            "MO",
            "MT",
            "NE",
            "NV",
            "NH",
            "NJ",
            "NM",
            "NY",
            "NC",
            "ND",
            "MP",
            "OH",
            "OK",
            "OR",
            "PW",
            "PA",
            "PR",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VT",
            "VI",
            "VA",
            "WA",
            "WV",
            "WI",
            "WY"
          ]
        },
        "state2": {
          "title": "State (Alternative format)",
          "description": "The state. This field has oneOf options, so it will render as a select input, where the value is the state abbreviation and the label is the state name.",
          "type": "string",
          "oneOf": [
            {
              "title": "Alabama",
              "const": "AL"
            },
            {
              "title": "Alaska",
              "const": "AK"
            },
            {
              "title": "American Samoa",
              "const": "AS"
            },
            {
              "title": "Arizona",
              "const": "AZ"
            },
            {
              "title": "Arkansas",
              "const": "AR"
            },
            {
              "title": "California",
              "const": "CA"
            },
            {
              "title": "Colorado",
              "const": "CO"
            },
            {
              "title": "Connecticut",
              "const": "CT"
            },
            {
              "title": "Delaware",
              "const": "DE"
            },
            {
              "title": "District Of Columbia",
              "const": "DC"
            },
            {
              "title": "Federated States Of Micronesia",
              "const": "FM"
            },
            {
              "title": "Florida",
              "const": "FL"
            },
            {
              "title": "Georgia",
              "const": "GA"
            },
            {
              "title": "Guam",
              "const": "GU"
            },
            {
              "title": "Hawaii",
              "const": "HI"
            },
            {
              "title": "Idaho",
              "const": "ID"
            },
            {
              "title": "Illinois",
              "const": "IL"
            },
            {
              "title": "Indiana",
              "const": "IN"
            },
            {
              "title": "Iowa",
              "const": "IA"
            },
            {
              "title": "Kansas",
              "const": "KS"
            },
            {
              "title": "Kentucky",
              "const": "KY"
            },
            {
              "title": "Louisiana",
              "const": "LA"
            },
            {
              "title": "Maine",
              "const": "ME"
            },
            {
              "title": "Marshall Islands",
              "const": "MH"
            },
            {
              "title": "Maryland",
              "const": "MD"
            },
            {
              "title": "Massachusetts",
              "const": "MA"
            },
            {
              "title": "Michigan",
              "const": "MI"
            },
            {
              "title": "Minnesota",
              "const": "MN"
            },
            {
              "title": "Mississippi",
              "const": "MS"
            },
            {
              "title": "Missouri",
              "const": "MO"
            },
            {
              "title": "Montana",
              "const": "MT"
            },
            {
              "title": "Nebraska",
              "const": "NE"
            },
            {
              "title": "Nevada",
              "const": "NV"
            },
            {
              "title": "New Hampshire",
              "const": "NH"
            },
            {
              "title": "New Jersey",
              "const": "NJ"
            },
            {
              "title": "New Mexico",
              "const": "NM"
            },
            {
              "title": "New York",
              "const": "NY"
            },
            {
              "title": "North Carolina",
              "const": "NC"
            },
            {
              "title": "North Dakota",
              "const": "ND"
            },
            {
              "title": "Northern Mariana Islands",
              "const": "MP"
            },
            {
              "title": "Ohio",
              "const": "OH"
            },
            {
              "title": "Oklahoma",
              "const": "OK"
            },
            {
              "title": "Oregon",
              "const": "OR"
            },
            {
              "title": "Palau",
              "const": "PW"
            },
            {
              "title": "Pennsylvania",
              "const": "PA"
            },
            {
              "title": "Puerto Rico",
              "const": "PR"
            },
            {
              "title": "Rhode Island",
              "const": "RI"
            },
            {
              "title": "South Carolina",
              "const": "SC"
            },
            {
              "title": "South Dakota",
              "const": "SD"
            },
            {
              "title": "Tennessee",
              "const": "TN"
            },
            {
              "title": "Texas",
              "const": "TX"
            },
            {
              "title": "Utah",
              "const": "UT"
            },
            {
              "title": "Vermont",
              "const": "VT"
            },
            {
              "title": "Virgin Islands",
              "const": "VI"
            },
            {
              "title": "Virginia",
              "const": "VA"
            },
            {
              "title": "Washington",
              "const": "WA"
            },
            {
              "title": "West Virginia",
              "const": "WV"
            },
            {
              "title": "Wisconsin",
              "const": "WI"
            },
            {
              "title": "Wyoming",
              "const": "WY"
            }
          ]
        },
        "notes": {
          "title": "Notes",
          "description": "Additional notes about the address. This field has a uiSchema of 'textarea', so it will render as a textarea input.",
          "type": "string",
          "uiSchema": "textarea"
        }
      },
      "required": ["street_address", "city", "state"]
    },
    "friend": {
      "title": "Friend",
      "description": "An object representing a friend.",
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "description": "The friend's name.",
          "type": "string"
        },
        "age": {
          "title": "Age",
          "description": "The friend's age.",
          "type": "integer",
          "minimum": 0,
          "maximum": 150
        },
        "address": {
          "title": "Address",
          "description": "The friend's address.",
          "$ref": "#/definitions/address"
        }
      },
      "required": ["name"]
    }
  },
  "properties": {
    "firstName": {
      "title": "Name",
      "description": "The person's name.",
      "type": "string",
      "minLength": 1,
      "maxLength": 100,
      "pattern": "^[A-Za-z]+$"
    },
    "lastName": {
      "title": "Last Name",
      "description": "The person's last name.",
      "type": "string",
      "minLength": 1,
      "maxLength": 100,
      "pattern": "^[A-Za-z]+$"
    },
    "age": {
      "title": "Age",
      "description": "The person's age.",
      "type": "integer",
      "minimum": 0,
      "maximum": 150
    },
    "email": {
      "title": "Email",
      "description": "The person's email address.",
      "type": "string",
      "format": "email"
    },
    "phone": {
      "title": "Phone",
      "description": "The person's phone number.",
      "type": "string"
    },
    "ssn": {
      "title": "SSN",
      "description": "The person's social security number.",
      "type": "string",
      "format": "password"
    },
    "homepage": {
      "title": "Homepage",
      "description": "The person's homepage URL.",
      "type": "string",
      "format": "uri"
    },
    "birthday": {
      "title": "Birthday",
      "description": "The person's birthday.",
      "type": "string",
      "format": "date"
    },
    "is_active": {
      "title": "Is Active",
      "description": "Whether the person is active. This field has a uiSchema of 'radio' and oneOf options, so it will render as a radio input.",
      "type": "boolean",
      "uiSchema": "radio",
      "oneOf": [
        {
          "title": "Yes",
          "const": true
        },
        {
          "title": "No",
          "const": false
        }
      ]
    },
    "loves_cats": {
      "title": "Loves Cats",
      "description": "Whether the person loves cats. This field has no complex definition, so it will default to a checkbox input.",
      "type": "boolean"
    },
    "loves_dogs": {
      "title": "Loves Dogs",
      "description": "Whether the person loves dogs. This field has a uiSchema of 'switch' but no oneOf options, so it will default to a checkbox input.",
      "type": "boolean",
      "uiSchema": "switch"
    },
    "loves_pizza": {
      "title": "Loves Pizza",
      "description": "Whether the person loves pizza. This field has a uiSchema of 'switch' and oneOf options, so it will render as a switch input.",
      "type": "boolean",
      "uiSchema": "switch",
      "default": true,
      "oneOf": [
        {
          "title": "🍕",
          "const": true
        },
        {
          "title": "🙅‍♂️",
          "const": false
        }
      ]
    },
    "loves_tacos": {
      "title": "Loves Tacos",
      "description": "Whether the person loves tacos. This field has oneOf options but no uiSchema defined, so it will default to the checkbox input.",
      "type": "boolean",
      "oneOf": [
        {
          "title": "🌮",
          "const": true
        },
        {
          "title": "🙅‍♂️",
          "const": false
        }
      ]
    },
    "address": {
      "title": "Address",
      "description": "The person's address.",
      "$ref": "#/definitions/address"
    },
    "friends": {
      "title": "Friends",
      "description": "A list of the person's friends.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/friend"
      },
      "minItems": 0,
      "uniqueItems": true
    },
    "employment": {
      "title": "Employment",
      "description": "The person's employment details.",
      "type": "object",
      "properties": {
        "employer": {
          "title": "Employer",
          "description": "The person's employer.",
          "type": "string"
        },
        "role": {
          "title": "Role",
          "description": "The person's role.",
          "type": "string"
        },
        "start_date": {
          "title": "Start Date",
          "description": "The date the person started the role.",
          "type": "string",
          "format": "date"
        },
        "end_date": {
          "title": "End Date",
          "description": "The date the person ended the role.",
          "type": "string",
          "format": "date"
        },
        "address": {
          "title": "Address",
          "description": "The address of the employment location.",
          "$ref": "#/definitions/address"
        }
      },
      "required": ["employer", "role", "start_date"]
    },
    "projects": {
      "title": "Projects",
      "description": "A list of the person's projects.",
      "type": "array",
      "items": {
        "title": "Project",
        "description": "An object representing a project.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "The name of the project.",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "description": "The description of the project.",
            "type": "string"
          },
          "start_date": {
            "title": "Start Date",
            "description": "The date the project started.",
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "title": "End Date",
            "description": "The date the project ended.",
            "type": "string",
            "format": "date"
          },
          "team": {
            "title": "Team",
            "description": "The team members involved in the project.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/friend"
            }
          }
        },
        "required": ["name", "description", "start_date"]
      },
      "minItems": 0,
      "uniqueItems": true
    }
  },
  "required": ["firstName", "lastName", "email"]
}
